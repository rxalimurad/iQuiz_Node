<!DOCTYPE html>
<html>
<head>
  <title>Quiz List</title>
  <style>
    /* Styling for columns */
    .quiz-container {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
    }

    .quiz-card {
      width: 300px;
      border: 1px solid #ccc;
      padding: 10px;
      border-radius: 5px;
    }

    .quiz-card h2 {
      margin-bottom: 5px;
    }

    .quiz-card p {
      margin: 5px 0;
    }

    .quiz-card button {
      margin-right: 5px;
    }

    .add-quiz-form {
      margin-top: 20px;
      border: 1px solid #ccc;
      padding: 10px;
      border-radius: 5px;
    }
  </style>
</head>
<body>
  <h1>Quiz List</h1>
  <div class="add-quiz-form">
    <h2>Add New Quiz</h2>
    <form id="addQuizForm" onsubmit="addNewQuiz(event)">
      <label for="quizName">Quiz Name:</label>
      <input type="text" id="quizName" name="quizName" required>
      <button type="submit">Add Quiz</button>
    </form>
  </div>

  <% if (data && data.length > 0) { %>
    <div class="quiz-container">
      <% data.forEach(quiz => { %>
        <div class="quiz-card">
          <h2><%= quiz.name %></h2>
          <p>ID: <%= quiz.id %></p>
          <p>Total Questions: <%= quiz.totalQuestions %></p>
          <p>Timestamp: <%= quiz.timestamp %></p>

          <button onclick="viewQuiz('<%= quiz.id %>')">View</button>
          <button onclick="editQuiz('<%= quiz.id %>')">Edit</button><br><br>
          <button onclick="deleteQuiz('<%= quiz.id %>')">Delete</button>
          <button onclick="addQuestion('<%= quiz.id %>')">Add Question</button>
<button onclick="viewQuiz('<%= quiz.id %>')">Upload Questions</button>
        </div>
      <% }); %>
    </div>
  <% } else { %>
    <p>No quizzes available.</p>
  <% } %>
<!-- Form for adding a new quiz -->
<div class="add-quiz-form">
    <!-- Form code from previous version -->
  </div>

  <!-- Container for displaying questions -->
  <div id="questionsContainer"></div>
  <!-- Form for adding a new quiz -->

  <!-- Script section (for demonstration purposes) -->
  <script>
    function editQuiz(quizId) {
      // Logic for editing quiz with the provided quizId
      console.log('Edit Quiz ID:', quizId);
    }

    function viewQuiz(quizId) {
        window.location.href = `admin/quizQuestions/${quizId}`;
    }

  
    function deleteQuiz(quizId) {
      // Logic for deleting quiz with the provided quizId
      console.log('Delete Quiz ID:', quizId);
    }

    function addQuestion(quizId) {
      // Logic for adding question to the quiz with the provided quizId
      console.log('Add Question to Quiz ID:', quizId);
    }

    async function deleteQuiz(quizId) {
      if (confirm('Are you sure you want to delete this quiz?')) {
        try {
          const response = await fetch(`http://localhost:10000/api/v1/quiz/${quizId}`, {
            method: 'DELETE'
          });

          if (response.ok) {
            console.log('Quiz deleted successfully.');
            // Reload the page or update quiz list dynamically as needed
            location.reload(); // For demonstration, reloading the page
          } else {
            console.error('Failed to delete the quiz.');
          }
        } catch (error) {
          console.error('Error:', error.message);
        }
      }
    }

    async function addNewQuiz(event) {
      event.preventDefault();
      const quizName = document.getElementById('quizName').value;
      const currentURL = "http://localhost:10000"//req.protocol + '://' + req.get('host');

      try {
        const response = await fetch(currentURL+'/api/v1/quiz/', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ name: quizName })
        });

        if (response.ok) {
          console.log('New quiz added successfully.');
          // Reload the page or update quiz list dynamically as needed
          location.reload(); // For demonstration, reloading the page
        } else {
          console.error('Failed to add a new quiz.' + response);
        }
      } catch (error) {
        console.error('Error:', error.message);
      }
    }
  </script>
</body>
</html>
